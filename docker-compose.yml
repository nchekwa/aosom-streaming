version: "3.8"
volumes:
    grafana_data: {}
    prometheus_data: {}
    influxdb_data: {}
    chronograf_data: {}
    loki_data: {}
    logstash_data: {}

networks:
  syslog:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 169.254.100.0/30
        gateway: 169.254.100.1

services:
# -------------------------------------------------------------------------
# Grafana - Graphical Interface
# -------------------------------------------------------------------------
  grafana:
    image: grafana/grafana:latest
    volumes:
      - /etc/localtime:/etc/localtime
      - grafana_data:/var/lib/grafana
      - ./config/grafana/grafana.ini:/etc/grafana/grafana.ini
    environment: 
      - GF_SECURITY_ADMIN_USER=${GRAFANA_LOGIN}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    restart: unless-stopped
    depends_on:
      - prometheus
    ports:
      - "3000:3000"

# -------------------------------------------------------------------------
# Prometheus
# -------------------------------------------------------------------------
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./config/prometheus/alert.rules:/etc/prometheus/alert.rules
      - /etc/localtime:/etc/localtime
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.retention=365d'
      - '--storage.tsdb.path=/prometheus'
    restart: unless-stopped
    ports:
      - '9090:9090'

# -------------------------------------------------------------------------
# Influxdb + Chronograf
# -------------------------------------------------------------------------
  influxdb:
    image: influxdb:1.8.9
    volumes:
     - /etc/localtime:/etc/localtime
     - ./config/influxdb/initdb/:/docker-entrypoint-initdb.d/
     - influxdb_data:/var/lib/influxdb
    environment:
      #- INFLUXDB_USER=${INFLUXDB_USER:-user}
      #- INFLUXDB_USER_PASSWORD=${INFLUXDB_USER_PASSWORD:-grafanapass123}
      - INFLUXDB_ADMIN_ENABLED=true 
      - INFLUXDB_ADMIN_USER=${INFLUXDB_ADMIN_USER:-admin}
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_ADMIN_PASSWORD:-admin}
      - INFLUXDB_DB="aos"
      - INFLUXDB_HTTP_AUTH_ENABLED=true
      - INFLUXDB_HTTP_LOG_ENABLED=false
      - INFLUXDB_REPORTING_DISABLED=true
      - INFLUXDB_MONITOR_STORE_ENABLED=false
      - INFLUXDB_INIT_RETENTION=365d
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 1024M
    healthcheck:
      test: "/usr/bin/wget -q -Y off http://localhost:8086/metrics -O /dev/null > /dev/null 2>&1"
      interval: 25s
      timeout: 3s
      start_period: 30s
    restart: unless-stopped
    ports:
     - "8086:8086"

  chronograf:
    image: chronograf:latest
    restart: unless-stopped
    volumes:
      - chronograf_data:/var/lib/chronograf
    depends_on:
      - influxdb
    environment:
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_USERNAME=${INFLUXDB_ADMIN_USER}
      - INFLUXDB_PASSWORD=${INFLUXDB_ADMIN_PASSWORD}
    ports:
      - '8888:8888'

# -------------------------------------------------------------------------
# Apstra-Telegraf - Prometheus (Alerts and Perfmon)
# -------------------------------------------------------------------------
  telegraf-prom:
    image: apstra/telegraf:latest
    command: telegraf -debug
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./config/telegraf/telegraf-prom.conf:/etc/telegraf/telegraf.conf
      - /etc/localtime:/etc/localtime
    depends_on:
      - prometheus
    ports:
      - '6666:6666'

# -------------------------------------------------------------------------
# Apstra-Telegraf - Influx (Events)
# -------------------------------------------------------------------------
  telegraf-influx:
    image: apstra/telegraf:latest
    command: telegraf -debug
    depends_on:
      - influxdb
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./config/telegraf/telegraf-influx.conf:/etc/telegraf/telegraf.conf
      - /etc/localtime:/etc/localtime
    environment: 
      - INFLUXDB_ADMIN_USER=${INFLUXDB_ADMIN_USER}
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_ADMIN_PASSWORD}
    ports:
      - '4444:4444'

# -------------------------------------------------------------------------
# Telegraf-Syslog [RFC 5424] + 
# Syslog-NG [RFC 3164] --OR-- RSyslog [RFC 3164]
# -------------------------------------------------------------------------
  telegraf-syslog:
    image: telegraf:latest
    command: telegraf -debug
    restart: unless-stopped
    hostname: telegraf-syslog
    env_file:
      - .env
    volumes:
      - ./config/telegraf/telegraf-syslog.conf:/etc/telegraf/telegraf.conf
      - /etc/localtime:/etc/localtime
    environment: 
      - INFLUXDB_ADMIN_USER=${INFLUXDB_ADMIN_USER}
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_ADMIN_PASSWORD}
    depends_on:
      - influxdb
    ports:
      - '6514:6514/udp'
      - '6601:6601'
    networks:
      default:
      syslog:
        ipv4_address: 169.254.100.2

  syslog-ng:
    command: -edv
    image: balabit/syslog-ng:latest
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime
      - ./config/syslog-ng/syslog-ng.conf:/etc/syslog-ng/syslog-ng.conf:ro
    network_mode: "host"
    depends_on:
      - telegraf-syslog
  
  #rsyslog:
  #  image: rsyslog/syslog_appliance_alpine:latest
  #  restart: unless-stopped
  #  hostname: rsyslog
  #  volumes:
  #    - ./config/rsyslog/:/config/
  #    - /etc/localtime:/etc/localtime
  #  network_mode: "host"
  #  environment: 
  #    - RSYSLOG_CONF=/config/rsyslog.conf
  #  depends_on:
  #    - telegraf-syslog

# -------------------------------------------------------------------------
# Loki + (Promtail if you need parse some logs)
# -------------------------------------------------------------------------
  loki:
    command: -config.file=/etc/loki/loki-config.yml
    image: grafana/loki:2.3.0
    ports:
    - protocol: tcp
      published: 3100
      target: 3100
    - protocol: tcp
      published: 9093
      target: 9093
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime
      - loki_data:/loki
      - ./config/loki/loki-config.yml:/etc/loki/loki-config.yml:ro
  
  #promtail:
  #  command: -config.file=/etc/promtail/promtail-config.yml
  #  image: grafana/promtail:latest
  #  ports:
  #  - protocol: tcp
  #    published: 1514
  #    target: 1514
  #  - protocol: tcp
  #    published: 9080
  #    target: 9080
  #  restart: always
  #  volumes:
  #    - /logs/:/logs/
  #    - /etc/localtime:/etc/localtime
  #    - ./config/promtail/promtail-config.yml:/etc/promtail/promtail-config.yml:ro

